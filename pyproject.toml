[project]
name = "ordnung"
version = "0.1.0"
description = "YAML/JSON sorter"
requires-python = ">=3.13"

[tool.uv]
# uv will use requirements.txt for runtime deps

[tool.ruff]
# Enable pycodestyle (`E`), Pyflakes (`F`), and isort (`I`) codes
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # Pyflakes
    "I",    # isort
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "UP",   # pyupgrade
    "N",    # pep8-naming
    "Q",    # flake8-quotes
    "SIM",  # flake8-simplify
    "ARG",  # flake8-unused-arguments
    "PIE",  # flake8-pie
    "TID",  # flake8-tidy-imports
    "RSE",  # flake8-raise
    "RET",  # flake8-return
    "SLF",  # flake8-self
    "SLOT", # flake8-slots
    "PTH",  # flake8-use-pathlib
    "LOG",  # flake8-logging-format
    "T20",  # flake8-print
    "PYI",  # flake8-pyi
    "PT",   # flake8-pytest-style
    "YTT",  # flake8-2020
    "FBT",  # flake8-boolean-trap
    "A",    # flake8-builtins
    "COM",  # flake8-commas
    "C90",  # mccabe
    "DTZ",  # flake8-datetimez
    "ISC",  # flake8-implicit-str-concat
    "G",    # flake8-logging-format
    "INP",  # flake8-no-pep420
    "ERA",  # eradicate
    "PD",   # pandas-vet
    "PGH",  # pygrep-hooks
    "PL",   # pylint
    "TRY",  # tryceratops
    "NPY",  # numpy-vet
    "AIR",  # flake8-airflow
    "PERF", # perflint
    "FURB", # refurb
    "RUF",  # ruff-specific rules
]

# Never enforce `E501` (line length violations) in docstrings or comments
ignore = [
    "E501",    # line too long, handled by line-length
    "B008",    # do not perform function calls in argument defaults
    "C901",    # too complex
    "PLR0913", # too many arguments to function call
    "PLR0912", # too many branches
    "PLR0915", # too many statements
    "PLR0911", # too many return statements
    "PLR2004", # magic value used in comparison
    "PLR0904", # too many public methods
]

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

# Same as Black.
line-length = 100
indent-width = 4

# Assume Python 3.8
target-version = "py38"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

[tool.ruff.isort]
known-first-party = ["ordnung"]

[tool.ruff.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**/*" = ["PLR2004", "S101"]

[tool.pytest.ini_options]
testpaths = ["tests"]
markers = [
    "integration: marks tests as integration tests (deselect with '-m \"not integration\"')",
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
]

[project.optional-dependencies]
test = ["pytest", "pytest-cov", "PyYAML>=6.0"]
dev = ["ruff", "pytest", "pytest-cov", "mypy"]
